<?php
/*
 * Password Banned List
 * By Matthew Simpson (http://matthewsimpson.net)
 * Copyright 2014 NB Communication (http://www.nbcommunication.com)
*/

class PasswordBannedList extends \ProcessWire\WireData implements \ProcessWire\Module {
	private $bad;
	static $listDir = 'PasswordBannedList';
	static $listFile = 'banned.list';

	public static function getModuleInfo() {
		return array(
			'title' => 'Password Banned List',
			'summary' => 'Check input password against a banned password file.',
			'autoload' => true,
			'version' => 100,
			'requires' => 'InputfieldPassword',
			'author'=>'NB Communication'
		);
	}

    public function ___install() {
		//Check if the assets directory has been added or not
        if(is_dir(\ProcessWire\wire('config')->paths->assets.self::$listDir.DIRECTORY_SEPARATOR)) return true;

		//Try to create the directory and throw an exception if it fails
        if(\ProcessWire\wiremkdir(\ProcessWire\wire('config')->paths->assets.self::$listDir.DIRECTORY_SEPARATOR) === false) {
            throw new \ProcessWire\WireException('The cache folder ('.\ProcessWire\wire('config')->paths->assets.self::$cacheDir.DIRECTORY_SEPARATOR.') could not be created.');
        } else {
			//Chmod to 777 so that users can add a banned.list file to the directory
			chmod(\ProcessWire\wire('config')->paths->assets.self::$listDir.DIRECTORY_SEPARATOR, 0777);
		}
    }

	public function init() {
		//Add our hook to after the password has been processed
		\ProcessWire\wire()->addHookAfter('InputfieldPassword::processInput',$this,'checkPass');
	}

	public function checkPass(\ProcessWire\HookEvent $event){
		//Get the input password
		$inputfield = $event->object;
		$password = $inputfield->attr('value');
		
		//Get the path to the user's banned.list
		$userList = \ProcessWire\wire('config')->paths->assets.self::$listDir.DIRECTORY_SEPARATOR.self::$listFile;
		
		//Load the built in banned.list and look for the input password
		if(file_exists(\ProcessWire\wire('config')->paths->PasswordBannedList.self::$listFile)){
			$this->bad = file(\ProcessWire\wire('config')->paths->PasswordBannedList.self::$listFile,FILE_SKIP_EMPTY_LINES|FILE_IGNORE_NEW_LINES);
			if(in_array($password, $this->bad)) {
				$inputfield->error('The password you entered is in the list of the 10,000 most common passwords. Please use a more secure password.');
				$inputfield->attr('value', '');
			}
		}

		//Load the user's banned.list and look for the input password
		if (file_exists($userList)) {
			$userArray = file($userList,FILE_SKIP_EMPTY_LINES|FILE_IGNORE_NEW_LINES);
			if(in_array($password, $userArray)) {
				$inputfield->error('This password is not allowed to be used, please use a more secure password.');
				$inputfield->attr('value', '');
			}
		}
	}
}
